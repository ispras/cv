name: Deploy

on: [push, workflow_dispatch]

jobs:
  build-launcher:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install requests ujson graphviz ply pytest atomicwrites more-itertools pluggy py attrs setuptools six django psycopg2 clade pyyaml pycparser sympy
    - name: Deployment of CV
      run: |
        DEPLOY_DIR=build make install -j$(nproc)
        DEPLOY_DIR=build make install-cif-compiled -j$(nproc)
        cp -r docs/examples/sources/ build/
        cd build
        python3 ./scripts/launch.py -c configs/it.json
        grep "it;smg;no_memory_leak_caller;TRUE;SUCCESS" results/report_launches_it_*.csv || exit 1
        grep "it;smg;memory_leak_caller;FALSE;SUCCESS" results/report_launches_it_*.csv || exit 1
  build-visualizer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install requests ujson graphviz ply pytest atomicwrites more-itertools pluggy py attrs setuptools six django psycopg2 pycparser sympy
    - name: Deployment of Benchmark Visualizer
      run: |
        DEPLOY_DIR=build make install-benchmark-visualizer -j$(nproc)
        cd build
        python3 ./scripts/visualize_witnesses.py -r results/ -d ../docs/examples/witnesses/violation/
        python3 ./scripts/visualize_witnesses.py -r results/ -d ../docs/examples/witnesses/correctness/
  build-mea:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install requests ujson graphviz ply pytest atomicwrites more-itertools pluggy py attrs setuptools six django psycopg2 pycparser sympy
    - name: Deployment of MEA
      run: |
        DEPLOY_DIR=build make install-mea -j$(nproc)
        cd build
        python3 ./scripts/filter.py -d ../docs/examples/witnesses/violation/
  build-frama-c-cil:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Deployment of Frama-C CIL
      run: |
        DEPLOY_DIR=build make install-frama-c-cil -j$(nproc)
